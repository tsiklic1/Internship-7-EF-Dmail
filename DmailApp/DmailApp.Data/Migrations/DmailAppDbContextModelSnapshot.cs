// <auto-generated />
using System;
using DmailApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DmailApp.Data.Migrations
{
    [DbContext(typeof(DmailAppDbContext))]
    partial class DmailAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.Mail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTimeOfSending")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("WasRead")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Mail");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Mail");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.ReceiversMails", b =>
                {
                    b.Property<int>("ReceiverId")
                        .HasColumnType("integer");

                    b.Property<int>("MailId")
                        .HasColumnType("integer");

                    b.HasKey("ReceiverId", "MailId");

                    b.HasIndex("MailId");

                    b.ToTable("ReceiversMails");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.UsersSpams", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("SpamId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "SpamId");

                    b.HasIndex("SpamId");

                    b.ToTable("UsersSpams");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.EventMail", b =>
                {
                    b.HasBaseType("DmailApp.Data.Entities.Models.Mails.Mail");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasDiscriminator().HasValue("EventMail");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.TextMail", b =>
                {
                    b.HasBaseType("DmailApp.Data.Entities.Models.Mails.Mail");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("TextMail");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.Mail", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.User", "Sender")
                        .WithMany("SentMails")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.ReceiversMails", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.User", "Receiver")
                        .WithMany("ReceiversMails")
                        .HasForeignKey("MailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DmailApp.Data.Entities.Models.Mails.Mail", "SentMail")
                        .WithMany("ReceiversMails")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("SentMail");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.UsersSpams", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.User", "User")
                        .WithMany("UsersSpamsSpam")
                        .HasForeignKey("SpamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DmailApp.Data.Entities.Models.User", "Spam")
                        .WithMany("UsersSpamsUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spam");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.Mail", b =>
                {
                    b.Navigation("ReceiversMails");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.User", b =>
                {
                    b.Navigation("ReceiversMails");

                    b.Navigation("SentMails");

                    b.Navigation("UsersSpamsSpam");

                    b.Navigation("UsersSpamsUser");
                });
#pragma warning restore 612, 618
        }
    }
}
