// <auto-generated />
using System;
using DmailApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DmailApp.Data.Migrations
{
    [DbContext(typeof(DmailAppDbContext))]
    [Migration("20230102153611_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.Mail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTimeOfSending")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("WasRead")
                        .HasColumnType("boolean");

                    b.Property<string>("mail_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Mails");

                    b.HasDiscriminator<string>("mail_type").HasValue("mail");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.ReceiversMails", b =>
                {
                    b.Property<int>("ReceiverId")
                        .HasColumnType("integer");

                    b.Property<int>("MailId")
                        .HasColumnType("integer");

                    b.Property<string>("mail_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ReceiverId", "MailId");

                    b.HasIndex("MailId");

                    b.ToTable("ReceiversMails");

                    b.HasDiscriminator<string>("mail_type").HasValue("textmail");

                    b.HasData(
                        new
                        {
                            ReceiverId = 2,
                            MailId = 1
                        },
                        new
                        {
                            ReceiverId = 3,
                            MailId = 1
                        },
                        new
                        {
                            ReceiverId = 1,
                            MailId = 2
                        },
                        new
                        {
                            ReceiverId = 1,
                            MailId = 3
                        },
                        new
                        {
                            ReceiverId = 2,
                            MailId = 4
                        },
                        new
                        {
                            ReceiverId = 3,
                            MailId = 5
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Adress = "mirko@gmail.com",
                            Password = "12345"
                        },
                        new
                        {
                            UserId = 2,
                            Adress = "domagoj@gmail.com",
                            Password = "abcde"
                        },
                        new
                        {
                            UserId = 3,
                            Adress = "marko12@dump.com",
                            Password = "sifra"
                        },
                        new
                        {
                            UserId = 4,
                            Adress = "dragana.dump@gmail.com",
                            Password = "dragana1234"
                        },
                        new
                        {
                            UserId = 5,
                            Adress = "dunja@gmail.com",
                            Password = "dumpdump"
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.UsersSpams", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("SpamId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "SpamId");

                    b.HasIndex("SpamId");

                    b.ToTable("UsersSpams");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            SpamId = 4
                        },
                        new
                        {
                            UserId = 2,
                            SpamId = 1
                        },
                        new
                        {
                            UserId = 2,
                            SpamId = 3
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.EventMail", b =>
                {
                    b.HasBaseType("DmailApp.Data.Entities.Models.Mails.Mail");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasDiscriminator().HasValue("eventmail");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            DateTimeOfSending = new DateTime(2022, 11, 11, 20, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 1,
                            Title = "Utakmica",
                            WasRead = false,
                            EventTime = new DateTime(2023, 2, 2, 16, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            DateTimeOfSending = new DateTime(2022, 4, 4, 20, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 1,
                            Title = "Rodendan",
                            WasRead = true,
                            EventTime = new DateTime(2022, 4, 7, 16, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            DateTimeOfSending = new DateTime(2022, 12, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 2,
                            Title = "Predavanje",
                            WasRead = false,
                            EventTime = new DateTime(2023, 2, 2, 16, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            DateTimeOfSending = new DateTime(2022, 11, 11, 20, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 4,
                            Title = "Radionica",
                            WasRead = false,
                            EventTime = new DateTime(2023, 7, 2, 16, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.TextMail", b =>
                {
                    b.HasBaseType("DmailApp.Data.Entities.Models.Mails.Mail");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("textmail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTimeOfSending = new DateTime(2022, 7, 11, 7, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 1,
                            Title = "Pozdrav",
                            WasRead = false,
                            Content = "Dobar dan."
                        },
                        new
                        {
                            Id = 2,
                            DateTimeOfSending = new DateTime(2022, 8, 5, 9, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 2,
                            Title = "Izvještaj",
                            WasRead = false,
                            Content = "Poštovani, šaljem vam izvještaj."
                        },
                        new
                        {
                            Id = 3,
                            DateTimeOfSending = new DateTime(2022, 7, 11, 7, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 3,
                            Title = "Slika",
                            WasRead = false,
                            Content = "U dokumentu se nalazi slika zgrade fakulteta"
                        },
                        new
                        {
                            Id = 4,
                            DateTimeOfSending = new DateTime(2022, 7, 11, 7, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 4,
                            Title = "YouTube video",
                            WasRead = false,
                            Content = "Hej, pogledaj ovaj video."
                        },
                        new
                        {
                            Id = 5,
                            DateTimeOfSending = new DateTime(2022, 7, 11, 7, 0, 0, 0, DateTimeKind.Utc),
                            SenderId = 4,
                            Title = "Kalendar",
                            WasRead = false,
                            Content = "Kalendar: Siječanj, veljača, ožujak, travanj, ..."
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.ReceiversEventMails", b =>
                {
                    b.HasBaseType("DmailApp.Data.Entities.Models.ReceiversMails");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("eventmail");

                    b.HasData(
                        new
                        {
                            ReceiverId = 2,
                            MailId = 6,
                            Status = 2
                        },
                        new
                        {
                            ReceiverId = 5,
                            MailId = 7,
                            Status = 2
                        },
                        new
                        {
                            ReceiverId = 4,
                            MailId = 8,
                            Status = 0
                        },
                        new
                        {
                            ReceiverId = 1,
                            MailId = 9,
                            Status = 1
                        },
                        new
                        {
                            ReceiverId = 2,
                            MailId = 9,
                            Status = 2
                        },
                        new
                        {
                            ReceiverId = 5,
                            MailId = 9,
                            Status = 2
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.Mail", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.User", "Sender")
                        .WithMany("SentMails")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.ReceiversMails", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.Mails.Mail", "SentMail")
                        .WithMany("ReceiversMails")
                        .HasForeignKey("MailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DmailApp.Data.Entities.Models.User", "Receiver")
                        .WithMany("ReceiversMails")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("SentMail");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.UsersSpams", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.User", "Spam")
                        .WithMany("UsersSpamsUser")
                        .HasForeignKey("SpamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DmailApp.Data.Entities.Models.User", "User")
                        .WithMany("UsersSpamsSpam")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spam");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mails.Mail", b =>
                {
                    b.Navigation("ReceiversMails");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.User", b =>
                {
                    b.Navigation("ReceiversMails");

                    b.Navigation("SentMails");

                    b.Navigation("UsersSpamsSpam");

                    b.Navigation("UsersSpamsUser");
                });
#pragma warning restore 612, 618
        }
    }
}
